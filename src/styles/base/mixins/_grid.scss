@mixin content-container {
	@include grid-container($include-column-gutter: false, $include-grid-row: false);

	&:after {
		content: none;
	}
}

@mixin grid-container($include-column-gutter: true, $include-grid-row: true) {
	@include container();

	@if $include-grid-row {
		@include grid-row(false);
	}

	@each $name, $data in $breakpoints {
		@if map-has-key($data, column-gutter) {
			$gutter: map-get($data, gutter);

			@if $include-column-gutter {
				$gutter: $gutter + map-get($data, column-gutter);
			}

			@media #{b($name,up)} {
				padding: {
					left: $gutter;
					right: $gutter;
				}
			}
		}
	}
}

@mixin faux-container($max-width: $row-width) {
	$gutter: false;

	@each $name, $data in $breakpoints {
		@if map-has-key($data, outer-gutter) {
			$gutter: map-get($data, gutter);
			$min: map-get($data, min);
			$full-width: $max-width + ($gutter * 2);

			$padding: if($min > $full-width, calc(50vw - #{$full-width / 2}), $gutter);

			@media #{b($name,up)} {
				padding: {
					left: $padding;
					right: $padding;
				}
			}

		}
	}

	// use last gutter
	@if $gutter {
		$padding: calc(50vw - #{($max-width / 2) - $gutter});

		@media only screen and (min-width: $max-width) {
			padding: {
				left: $padding;
				right: $padding;
			}
		}
	}
}

@mixin grid-row($sub: true) {
	overflow: hidden;
	clear: both;

	@if $sub {

		@each $name, $data in $breakpoints {
			@if map-has-key($data, column-gutter) {
				$gutter: map-get($data, column-gutter) / 2;

				@media #{b($name,up)} {
					padding: {
						left: -$gutter;
						right: -$gutter;
					}
				}
			}
		}
	}
}

@mixin grid-column($cols, $gutter: true, $center: false) {
	@include span($cols);

	@if $gutter {
		@each $name, $data in $breakpoints {
			@if map-has-key($data, column-gutter) {
				$gutter: map-get($data, column-gutter) / 2;

				@media #{b($name,up)} {
					padding: {
						left: $gutter;
						right: $gutter;
					}
				}
			}
		}
	}

	@if $center {
		float: none;
		margin: 0 auto;
	}
}

@mixin flex-row($align: center) {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: space-between;
	align-items: $align;
}

@mixin flex-grid($basis, $gutter: $global-gutter) {
	display: flex;
	flex-wrap: wrap;
	margin: 0 #{-$gutter / 2} #{-$gutter};

	& > * {
		margin: 0 #{$gutter / 2} #{$gutter};
		flex: 0 1 calc(#{$basis} - #{$gutter});
	}
}
